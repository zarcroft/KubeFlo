apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\zarcr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f docker-compose.yml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\zarcr\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f docker-compose.yml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/test2-default: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: doodle
            - name: MYSQL_PASSWORD
              value: doodle
            - name: MYSQL_ROOT_PASSWORD
              value: rootpassword
            - name: MYSQL_USER
              value: doodle
          image: mysql:latest
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            failureThreshold: 10
            timeoutSeconds: 20
          name: db
          ports:
            - containerPort: 3306
              hostPort: 3306
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: db-claim0
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
status: {}
